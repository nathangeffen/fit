!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FIT_HPP	fit.hpp	17;"	d
Optimization	fit.cpp	/^Optimization::Optimization(opt_parameters & p)$/;"	f	class:Optimization
Optimization	fit.hpp	/^class Optimization {$/;"	c
best	fit.hpp	/^    std::vector<double> best;$/;"	m	struct:opt_result
calls	fit.hpp	/^    unsigned calls;$/;"	m	struct:opt_result
command	fit.hpp	/^    std::string command = "";$/;"	m	struct:opt_parameters
command_	fit.cpp	/^    std::string command_;$/;"	m	struct:external	file:
command_	fit.hpp	/^        std::string command_;$/;"	m	class:Optimization
divisions	fit.hpp	/^    std::vector<unsigned> divisions = {5};$/;"	m	struct:opt_parameters
divisions_	fit.hpp	/^        std::vector<unsigned> divisions_ = {};$/;"	m	class:Optimization
domains	fit.hpp	/^    std::vector<std::pair<double, double>> domains = {{-100.0, 100.0}};$/;"	m	struct:opt_parameters
domains_	fit.hpp	/^        std::vector<std::pair<double, double>> domains_;$/;"	m	class:Optimization
error	fit.hpp	/^    double error = 0.1;$/;"	m	struct:opt_parameters
error_	fit.hpp	/^        double error_;$/;"	m	class:Optimization
exec_func	fit.cpp	/^double Optimization::exec_func(std::vector < double >x)$/;"	f	class:Optimization
external	fit.cpp	/^    explicit external(std::string & command):command_(command) {$/;"	f	struct:external
external	fit.cpp	/^struct external {$/;"	s	file:
flipflop	fit.cpp	/^double flipflop(const std::vector < double >&v)$/;"	f
func	fit.hpp	/^    opt_func func = sphere;$/;"	m	struct:opt_parameters
func_	fit.hpp	/^        opt_func func_;$/;"	m	class:Optimization
func_calls_	fit.hpp	/^        std::atomic_uint func_calls_;$/;"	m	class:Optimization
func_name	fit.hpp	/^    std::string func_name = "sphere";$/;"	m	struct:opt_parameters
generations	fit.hpp	/^    unsigned generations = 3;$/;"	m	struct:opt_parameters
generations_	fit.hpp	/^        unsigned generations_;$/;"	m	class:Optimization
grid	fit.cpp	/^opt_result Optimization::grid()$/;"	f	class:Optimization
hi	fit.hpp	/^    std::vector<double> hi = {100.0};$/;"	m	struct:opt_parameters
iterations	fit.hpp	/^    unsigned iterations = 1000;$/;"	m	struct:opt_parameters
iterations_	fit.hpp	/^        unsigned iterations_;$/;"	m	class:Optimization
lo	fit.hpp	/^    std::vector<double> lo = {-100.0};$/;"	m	struct:opt_parameters
lowest	fit.hpp	/^    double lowest;$/;"	m	struct:opt_result
main	main.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	sphere.c	/^int main(int argc, char *argv[])$/;"	f
make_divisions	fit.cpp	/^void make_divisions(opt_parameters & parameters)$/;"	f
make_domains	fit.cpp	/^void make_domains(opt_parameters & parameters)$/;"	f
method	fit.hpp	/^    std::string method = "grid";$/;"	m	struct:opt_parameters
method_	fit.hpp	/^        std::string method_;$/;"	m	class:Optimization
nelder_mead_simplex	fit.cpp	/^opt_result Optimization::nelder_mead_simplex()$/;"	f	class:Optimization
nms_func	fit.cpp	/^double Optimization::nms_func(const gsl_vector *v, void *params)$/;"	f	class:Optimization
operator ()	fit.cpp	/^    } double operator() (const std::vector < double >&x_i) {$/;"	f	struct:external
operator <<	main.cpp	/^std::ostream &operator<<(std::ostream &os, const std::vector<T> &v) {$/;"	f
operator <<	main.cpp	/^std::ostream &operator<<(std::ostream &os,$/;"	f
opt_func	fit.hpp	/^typedef std::function<double(const std::vector<double>)> opt_func;$/;"	t
opt_parameters	fit.hpp	/^struct opt_parameters {$/;"	s
opt_result	fit.hpp	/^struct opt_result {$/;"	s
optimize	fit.cpp	/^opt_result Optimization::optimize()$/;"	f	class:Optimization
original_domains_	fit.hpp	/^        std::vector<std::pair<double, double>> original_domains_;$/;"	m	class:Optimization
passes	fit.hpp	/^    unsigned passes = 1;$/;"	m	struct:opt_parameters
passes_	fit.hpp	/^        unsigned passes_;$/;"	m	class:Optimization
print_parameters	main.cpp	/^void print_parameters(const opt_parameters &parameters) {$/;"	f
process_options	main.cpp	/^void process_options(int argc, char *argv[], opt_parameters &parameters) {$/;"	f
random	fit.cpp	/^opt_result Optimization::random()$/;"	f	class:Optimization
rastrigin	fit.cpp	/^double rastrigin(const std::vector < double >&v)$/;"	f
rd	fit.cpp	/^static std::random_device rd;$/;"	v	file:
single_pass	fit.cpp	/^void Optimization::single_pass(unsigned pass_no, unsigned thread_no,$/;"	f	class:Optimization
sphere	fit.cpp	/^double sphere(const std::vector < double >&v)$/;"	f
sphere	sphere.c	/^double sphere(double x[], size_t n)$/;"	f
split	main.cpp	/^std::vector<std::string> split(const std::string &str, char delim = ':') {$/;"	f
strvecT	main.cpp	/^template <typename T> std::string strvecT(const std::vector<T> &v) {$/;"	f
strvechilo	main.cpp	/^std::string strvechilo(const std::vector<std::pair<double, double>> &v) {$/;"	f
strvectodblvec	main.cpp	/^std::vector<double> strvectodblvec(const std::vector<std::string> &vals) {$/;"	f
strvectounsvec	main.cpp	/^std::vector<unsigned> strvectounsvec(const std::vector<std::string> &vals) {$/;"	f
threads	fit.hpp	/^    unsigned threads = std::thread::hardware_concurrency();$/;"	m	struct:opt_parameters
threads_	fit.hpp	/^        unsigned threads_;$/;"	m	class:Optimization
variables	fit.hpp	/^    unsigned variables = 1;$/;"	m	struct:opt_parameters
verbose	fit.hpp	/^    bool verbose = false;$/;"	m	struct:opt_parameters
